{"version":3,"sources":["Snake.js","Border.js","App.js","index.js"],"names":["_Snake","board","this","speed","score","snakeBody","x","y","indexOfApple","direction","isDead","totalMoves","length","apple","element","document","createElement","classList","add","style","gridRowStart","gridColumnStart","appendChild","coord","givePositiveCoordinates","push","coordinates","Array","keys","slice","Math","floor","random","splice","indexOf","piece","restart","handleCrash","i","e","key","toLowerCase","innerHTML","getElementById","display","querySelector","textContent","Snake","useEffect","border","SNAKE","lastRenderTime","main","currentTime","window","requestAnimationFrame","move","draw","spawnApple","handleApple","addEventListener","includes","handleClick","Border","className","id","App","title","icon","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.57f52490.chunk.js","sourcesContent":["import './App.css';\r\nimport { useEffect } from 'react';\r\n\r\nclass _Snake {\r\n    constructor(board) {\r\n        this.speed = 5;\r\n        this.score = 0;\r\n        this.snakeBody = [\r\n            {\r\n                x: 11,\r\n                y: 11\r\n            },\r\n            {\r\n                x: 11,\r\n                y: 10\r\n            },\r\n            {\r\n                x: 11,\r\n                y: 9\r\n            },\r\n            {\r\n                x: 11,\r\n                y: 8\r\n            }\r\n        ];\r\n        this.indexOfApple = [];\r\n        this.board = board;\r\n        this.direction = { x: 1, y: 0 };\r\n        this.isDead = false;\r\n        this.totalMoves = 0;\r\n    }\r\n\r\n    spawnApple() {\r\n        if (this.indexOfApple.length === 2) {\r\n            for (const apple of this.indexOfApple) {\r\n                const element = document.createElement(\"div\");\r\n\r\n                element.classList.add(\"apple\");\r\n\r\n                element.style.gridRowStart = apple.x;\r\n                element.style.gridColumnStart = apple.y;\r\n\r\n                this.board.appendChild(element);\r\n            }\r\n        } else {\r\n            const coord = this.givePositiveCoordinates();\r\n\r\n            this.indexOfApple.push({ x: coord.x, y: coord.y });\r\n        }\r\n    }\r\n\r\n    givePositiveCoordinates() {\r\n        const coordinates = {\r\n            x: [...Array(21).keys()].slice(1)[Math.floor(Math.random() * 20)],\r\n            y: [...Array(21).keys()].slice(1)[Math.floor(Math.random() * 20)]\r\n        }\r\n\r\n        for (const element of this.snakeBody) {\r\n            if (coordinates.x === element.x && coordinates.y === element.y) return this.givePositiveCoordinates();\r\n        }\r\n\r\n        for (const apple of this.indexOfApple) {\r\n            if (coordinates.x === apple.x && coordinates.y === apple.y) return this.givePositiveCoordinates();\r\n        }\r\n\r\n        return coordinates;\r\n    }\r\n\r\n    handleApple() {\r\n        for (const apple of this.indexOfApple) {\r\n            if (this.snakeBody[0].x === apple.y && this.snakeBody[0].y === apple.x) {\r\n                this.indexOfApple.splice(this.indexOfApple.indexOf(apple), 1);\r\n                this.score += 1;\r\n               (this.speed === 10) ? this.speed = 10 : this.speed += .5;\r\n                this.snakeBody = [...this.snakeBody, { x: this.snakeBody[this.snakeBody.length - 1].x + 1, y: this.snakeBody[this.snakeBody.length - 1].y + 1 }]\r\n\r\n                const coord = this.givePositiveCoordinates();\r\n\r\n                this.indexOfApple.push({ x: coord.x, y: coord.y });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCrash() {\r\n        //We check whether the snake head encounters a snakebody in front of it (loses)\r\n        for (const piece of this.snakeBody.slice(1)) {\r\n            if (this.snakeBody[0].x === piece.x && this.snakeBody[0].y === piece.y) {\r\n                if (this.isDead || this.totalMoves < 5) continue;\r\n                this.isDead = true;\r\n                this.restart();\r\n            }\r\n        }\r\n\r\n        //Now we check whether the snake HEAD hit a border.\r\n        if (this.snakeBody[0].x < 1 || this.snakeBody[0].x >= 20 || this.snakeBody[0].y < 1 || this.snakeBody[0].y >= 20) {\r\n            if (this.isDead) return;\r\n            this.isDead = true;\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.handleCrash();\r\n\r\n        for (let i = this.snakeBody.length - 2; i >= 0; i--) {\r\n            this.snakeBody[i + 1] = { ...this.snakeBody[i] };\r\n        }\r\n\r\n        this.snakeBody[0].x += this.direction.x;\r\n        this.snakeBody[0].y += this.direction.y;\r\n\r\n    }\r\n\r\n    handleClick(e) {\r\n        switch (e.key.toLowerCase()) {\r\n            default:\r\n                return;\r\n\r\n            case \"w\":\r\n            case \"arrowup\":\r\n                if (this.direction.y === 1) return;\r\n\r\n                this.direction = { x: 0, y: -1 };\r\n                this.totalMoves += 1;\r\n                break;\r\n\r\n            case \"d\":\r\n            case \"arrowright\":\r\n\r\n                if (this.direction.x === -1) return;\r\n                this.direction = { x: 1, y: 0 };\r\n                this.totalMoves += 1;\r\n\r\n                break;\r\n\r\n            case \"a\":\r\n            case \"arrowleft\":\r\n                if (this.direction.x === 1) return;\r\n                this.direction = { x: -1, y: 0 };\r\n                this.totalMoves += 1;\r\n                break;\r\n\r\n            case \"s\":\r\n            case \"arrowdown\":\r\n                if (this.direction.y === -1) return;\r\n                this.direction = { x: 0, y: 1 };\r\n                this.totalMoves += 1;\r\n                break;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.board.innerHTML = '';\r\n        for (let i = 0; i < this.snakeBody.length; i++) {\r\n            const element = document.createElement(\"div\");\r\n\r\n            if (i === 0) element.classList.add(\"head\");\r\n            else element.classList.add(\"body\");\r\n\r\n            element.style.gridRowStart = this.snakeBody[i].y;\r\n            element.style.gridColumnStart = this.snakeBody[i].x;\r\n            this.board.appendChild(element);\r\n\r\n        }\r\n    }\r\n\r\n    restart() {\r\n        document.getElementById(\"border\").style.display = \"none\";\r\n        document.querySelector(\"h2\").textContent = \"You lost!\";\r\n        document.querySelector(\".score\").innerHTML = `\r\n        Score: ${this.score}\r\n        <br/>\r\n        Total moves: ${this.totalMoves}\r\n        <br/>\r\n        <button id=\"playagain\" onclick=\"window.location.reload(false)\">Play Again</button>\r\n        `;\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction Snake() {\r\n    useEffect(() => {\r\n        const border = document.getElementById(\"border\");\r\n\r\n        const SNAKE = new _Snake(border);\r\n        let lastRenderTime = 0;\r\n        function main(currentTime) {\r\n            window.requestAnimationFrame(main);\r\n            const secondLastRender = (currentTime - lastRenderTime) / 1000;\r\n\r\n            if (secondLastRender < 1 / SNAKE.speed) return;\r\n\r\n            lastRenderTime = currentTime;\r\n\r\n            SNAKE.move();\r\n            SNAKE.draw();\r\n            SNAKE.spawnApple();\r\n            SNAKE.handleApple();\r\n            if (!SNAKE.isDead) document.querySelector(\".score\").textContent = `Score: ${SNAKE.score}`;\r\n        }\r\n\r\n        window.addEventListener(\"keydown\", function (e) {\r\n            if (![\"w\", \"a\", \"s\", \"d\", \"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\"].includes(e.key)) return;\r\n            document.getElementById(\"instructions\").style.display = \"none\";\r\n            SNAKE.handleClick(e);\r\n            window.requestAnimationFrame(main);\r\n        });\r\n\r\n    }, []);\r\n\r\n    return null;\r\n}\r\n\r\nexport default Snake;","import './App.css';\r\nimport Snake from './Snake';\r\n\r\n\r\nfunction Border() {\r\n    return (\r\n    \r\n            <div className=\"border\" id=\"border\">\r\n                <Snake />\r\n            </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Border;","import './App.css';\r\nimport Head from \"react-document-configuration\";\r\nimport Border from './Border';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div id=\"instructions\">Press <i className=\"keyboard-button\">W</i> <i className=\"keyboard-button\">A</i> <i className=\"keyboard-button\">S</i> <i className=\"keyboard-button\">D</i> to play.</div>\r\n      <Head title=\"Snake Game\" icon=\"\"/>\r\n      <center>\r\n        <h2>Snake Game</h2>\r\n        <p className=\"score\">Score: 0</p>\r\n      </center>\r\n      <Border/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}